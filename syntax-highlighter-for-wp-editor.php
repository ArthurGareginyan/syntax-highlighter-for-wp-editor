<?php
/**
 * Plugin Name: Syntax Highlighter for WP Editor
 * Plugin URI: https://github.com/ArthurGareginyan/syntax-highlighter-for-wp-editor
 * Description: Replaces the defaults WordPress Theme and Plugin Editor with an enhanced editor with syntax highlighting and line numbering.
 * Author: Arthur "Berserkr" Gareginyan
 * Author URI: http://www.arthurgareginyan.com
 * Version: 1.0
 * License: GPL3
 * Text Domain: SHighlighterForWPE
 * Domain Path: /languages/
 *
 * Copyright 2016  Arthur "Berserkr" Gareginyan  (email : arthurgareginyan@gmail.com)
 *
 * This file is part of "Syntax Highlighter for WP Editor".
 *
 * "Syntax Highlighter for WP Editor" is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * "Syntax Highlighter for WP Editor" is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with "Syntax Highlighter for WP Editor".  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 * Prevent Direct Access
 *
 * @since 0.1
 */
defined('ABSPATH') or die("Restricted access!");

/**
 * Register text domain
 *
 * @since 0.1
 */
function SHighlighterForWPE_textdomain() {
	load_plugin_textdomain( 'SHighlighterForWPE', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' );
}
add_action( 'init', 'SHighlighterForWPE_textdomain' );

/**
 * Print direct link to Syntax Highlighter for WP Editor admin page
 *
 * Fetches array of links generated by WP Plugin admin page ( Deactivate | Edit )
 * and inserts a link to the Syntax Highlighter for WP Editor admin page
 *
 * @since  0.1
 * @param  array $links Array of links generated by WP in Plugin Admin page.
 * @return array        Array of links to be output on Plugin Admin page.
 */
function SHighlighterForWPE_settings_link( $links ) {
	$settings_page = '<a href="' . admin_url( 'options-general.php?page=syntax-highlighter-for-wp-editor.php' ) .'">' . __( 'Settings', 'SHighlighterForWPE' ) . '</a>';
	array_unshift( $links, $settings_page );
	return $links;
}
$plugin = plugin_basename( __FILE__ );
add_filter( "plugin_action_links_$plugin", 'SHighlighterForWPE_settings_link' );

/**
 * Register "Syntax Highlighter" submenu in "Settings" Admin Menu
 *
 * @since 0.1
 */
function SHighlighterForWPE_register_submenu_page() {
	add_options_page( __( 'Syntax Highlighter for WP Editor', 'SHighlighterForWPE' ), __( 'Syntax Highlighter for WP Editor', 'SHighlighterForWPE' ), 'manage_options', basename( __FILE__ ), 'SHighlighterForWPE_render_submenu_page' );
}
add_action( 'admin_menu', 'SHighlighterForWPE_register_submenu_page' );

/**
 * Attach Settings Page
 *
 * @since 0.1
 */
require_once( plugin_dir_path( __FILE__ ) . 'inc/settings_page.php' );

/**
 * Register settings
 *
 * @since 0.1
 */
function SHighlighterForWPE_register_settings() {
	register_setting( 'SHighlighterForWPE_settings_group', 'SHighlighterForWPE_settings' );
}
add_action( 'admin_init', 'SHighlighterForWPE_register_settings' );

/**
 * Create a content for the _enqueue_scripts hook
 *
 * @since 1.0
 */
function SHighlighterForWPE_prepare() {

    // Read options from BD
    $options = get_option( 'SHighlighterForWPE_settings' );

    // CodeMirror library
    wp_enqueue_script('codemirror', plugin_dir_url(__FILE__) . 'inc/codemirror/codemirror-compressed.js');
    wp_enqueue_style('codemirror_style', plugin_dir_url(__FILE__) . 'inc/codemirror/codemirror.css');
    wp_enqueue_script('codemirror-setting', plugin_dir_url(__FILE__) . 'inc/editor.js', array(), false, true);
    if ( $options['theme'] != "default" ) {
        wp_enqueue_style('codemirror_theme', plugin_dir_url(__FILE__) . 'inc/codemirror/theme/' . $options['theme'] . '.css');
    }

    // Check the extension of loaded file and change the Mode of CodeMirror
    global $file;
    if ( !empty( $file )) {
        $ext = substr( $file, strrpos( $file, '.' ) + 1 );
        
        switch ( $ext ) {
            case 'css':
                $mode = 'text/css';
                break;
                
            case 'html':
                $mode = 'text/html';
                break;

            case 'xml':
                $mode = 'text/xml';
                break;
                
            case 'js':
                $mode = 'text/javascript';
                break;
                
            case 'php':
                $mode = 'application/x-httpd-php';
                break;

            case 'txt':
                $mode = 'text/x-markdown';
                break;
        }
    } else {
        $mode = 'application/x-httpd-php';
        $readonly = 'true';
    }

    // Create js object and injected it into the js file
    if ( !empty( $options['theme'] ) ) { $theme = $options['theme']; } else { $theme = "default"; };
    if ( !empty( $options['line_numbers'] ) && ( $options['line_numbers'] == "on" ) ) { $line_numbers = "true"; } else { $line_numbers = "false"; };
    if ( !empty( $options['first_line_number'] ) ) { $first_line_number = $options['first_line_number']; } else { $first_line_number = "0"; };
    if ( !empty( $options['tab_size'] ) ) { $tab_size = $options['tab_size']; } else { $tab_size = "4"; };
    
    $script_params = array(
                           'theme' => $theme,
                           'line_numbers' => $line_numbers,
                           'first_line_number' => $first_line_number,
                           'tab_size' => $tab_size,
                           'mode' => $mode,
                           'readonly' => $readonly,
                           );
    wp_localize_script( 'codemirror-setting', 'scriptParams', $script_params );
}

/**
 * Enqueue scripts and style sheet
 *
 * @since 1.0
 */
function SHighlighterForWPE_enqueue_editor_scripts($hook) {

    // If is a Plugin/Theme Editors page
    if ( 'plugin-editor.php' == $hook || 'theme-editor.php' == $hook )  {

        wp_enqueue_style('style-editor', plugin_dir_url(__FILE__) . 'inc/style-editor.css');
            
        SHighlighterForWPE_prepare();
    }

    // If is a settings page of this plugin
    if ( 'settings_page_syntax-highlighter-for-wp-editor' == $hook ) {

        wp_enqueue_style('style-settings-page', plugin_dir_url(__FILE__) . 'inc/style-settings-page.css');

        SHighlighterForWPE_prepare();
    }
}
add_action( 'admin_enqueue_scripts', 'SHighlighterForWPE_enqueue_editor_scripts' );

/**
 * Delete options on uninstall
 *
 * @since 0.1
 */
function SHighlighterForWPE_uninstall() {
	delete_option( 'SHighlighterForWPE_settings' );
}
register_uninstall_hook( __FILE__, 'SHighlighterForWPE_uninstall' );

/* That's all folks! */
?>